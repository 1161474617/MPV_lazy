##⇘⇘基本说明：
##行首存在注释符"#"，代表此项处于不启用状态（即恢复MPV的默认设置状态），删去即启用。对大多数选项加入了中文注释说明，部分选项之间有关联作用
##部分启用的参数没有"="，则该项实际为"yes"。例如deband默认关闭： --deband 实际等效 --deband=yes；类推 --deband=no 等效注释掉该参数
##注释内容解释 —— # <可选值> [条件要求] 参数意义说明 （补充） | ##单独一行的追加解释
##MPV读取参数时由上往下读，所以注意书写通用参数的顺序，可查看手册[02]的顺序逻辑部分的错误示范

 ########
 # 基础 #
 ########
vo=gpu # 视频输出驱动。当前版本默认值即gpu，许多渲染选项也只能在gpu/libmpv下正常工作
gpu-api=d3d11 # <opengl/vulkan/d3d11> [SVP补帧时推荐设置为d3d11] opengl是最不推荐选择，vulkan的10bit尚未完全实现 https://github.com/mpv-player/mpv/issues/8554
#gpu-context=auto # 选择输出后端。此项通常由 --gpu-api=<value> 自动决定正确值；--gpu-api=opengl 时默认选用 angle ，此时最好改为 win/dxinterop
#fbo-format=auto # 内处理精度。此项通常由 --gpu-api=<value> 自动决定正确值，默认首选16位及以上的精度
#d3d11-exclusive-fs=yes # --gpu-api=d3d11 下的全屏独占
#d3d11-flip=no # 或 --angle-flip=no（当 --gpu-context=angle 时用此参数代替）。可用于避免MPV切换全屏时的冻屏问题（如果存在）

hwdec=d3d11va-copy # 指定应使用的硬件视频解码API。软解改值为 no。硬解建议使用 auto-copy。10系以上N卡强烈建议使用 nvdec-copy
##上项参数 --hwdec=auto 等效 --hwdec=yes。当 --gpu-api=d3d11 时，值 auto-copy 默认为 dxva2-copy，此外你也可以使用 d3d11va-copy，至于为什么不选用效率更高的 无-copy 参数，目的是确保所有滤镜/着色器正常作用（有些不支持native模式）
hwdec-codecs=all # 在选定范围内的编码格式尝试硬解，默认为 --hwdec-codecs=h264,vc1,hevc,vp8,vp9,av1

#log-file="~~desktop/mpv-lazy.log" # 记录名为"mpv-lazy"的log日志在桌面


 ########
 # 功能 #
 ########
#fs # --fs 等效 --fullscreen。打开MPV自动进入全屏
#border=no # 默认为系统原生窗口界面，启用此项使用无边框界面（去除WINDOWS的窗口装饰）
#background="#778899" # <格式为(AA)RRGGBB> 更改MPV初启动与播放无视频轨文件时的背景颜色
hidpi-window-scale=no # 是否执行HIDPI缩放，默认yes。默认值情况下初始化的视频窗口随DPI改变大小，例如在缩放200%的4k的显示器打开800p视频后自动执行2倍缩放变1600p
autofit-larger=80%x80% # 窗口模式下最大占屏幕的百分比（例如在FHD屏上打开4k视频初始窗口过大）
autofit-smaller=50%x50% # 窗口模式下最小占屏幕的百分比（例如在4k屏上打开720p视频初始窗口过小）
#ontop # 窗口置顶（当 --gpu-api=vulkan 时也有全屏独占作用）。此项受 on_top_only_while_playing.lua 脚本和 --pause 参数影响

pause # 以暂停状态启动播放器（首次启动会影响 --ontop 的状态判定，开始播放后即可恢复）
#loop=inf # <N|inf|no> 始终循环播放当前文件
#loop-playlist=no # <N|inf|force|no> 播放列表循环
keep-open=yes # 播放完毕不退出
hr-seek-framedrop=no # 跳转时丢帧，关闭利于修正音频延迟 # [SVP补帧时推荐设置为no]
save-position-on-quit=no # [SVP补帧时推荐设置为no] 退出不记住播放位置。
##目前极不建议使用上行选项。保存位置这个功能具有迷惑性，它还会保存一些额外状态，导致下次启动MPV时因恢复这些参数速度而变慢 https://github.com/mpv-player/mpv/issues/4641

#demuxer-max-bytes=200MiB # 播放网络视频时的向后缓存大小（KiB或MiB）



 #######
 # OSD #
 #######
##⇘⇘OSD 即 On-Screen-Display ，通常为屏幕上弹出显示的信息。 OSC 即 on-screen-controller ，MPV中指的是简易操控界面
osd-on-seek=msg-bar # <no,bar,msg,msg-bar> 在跳转时间轴时显示的信息类型
osd-blur=0
osd-bar-w=100
osd-bar-h=2
osd-bar-align-y=-1
#osd-color='#B300FFFF'
#osd-border-color='#B3008B8B'
osd-border-size=0
osd-fractions # 以秒为单位显示OSD时间（毫秒精度）。有助于查看视频帧的确切时间戳。
osd-playing-msg="${filename}" # 开始播放时短暂显示文件名
osd-duration=2000 # 设置OSD文本信息的持续时间（毫秒）（默认值：1000）



 ########
 # 音频 #
 ########
#ao=wasapi # win10默认使用WASAPI。如果有其他软件先独占音频通道后，再打开MPV可能会画面会卡顿
#audio-device=auto # 此项用于指定启动时的音频输出设备，改具体值示例 --audio-device="wasapi/{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}"，设备名获取方式见发布页FAQ图文或官方手册
#audio-exclusive=yes # 音频通道独占。打开可能存在音频卡顿的问题
audio-file-auto=fuzzy # <默认no|exact|fuzzy|all> 自动加载同名外挂音轨（fuzzy为模糊名，exact为精确名）
#audio-channels=stereo # 强制多声道音源下混为双声道输出（避免可能的7.1/5.1→2.0声音丢失和音量过小）
volume-max=100 # <100.0-1000.0> 最大音量。默认值130
#volume=100 # 播放器启动音量。0为静音，默认100
#audio-pitch-correction=yes # [--af=scaletempo/scaletempo2/rubberband 的前置条件] 变速播放时的音调修正，默认开启。自动插入前三项音频滤镜中其一（更多信息见滤镜区）



 ########
 # 视频 #
 ########
##⇘⇘色彩管理
#icc-profile-auto # 如果做过专业校色应开启（系统目录存在对应的icm校色文档）。未做校色的广色域屏应手动指定 --target-prim=<value>
#icc-profile="X:\xxx\xxxx.icm" # 此选项用于加载指定的ICC，与前项不共存
#icc-3dlut-size=<r>x<g>x<b> # <2-512> 从每个维度的ICC配置文件生成的3D LUT的大小。默认值为 64x64x64
icc-cache-dir="~~/icc_cache" # 指定目录存储和加载从ICC配置文件创建的3D LUT，可以用来加快加载速度。未压缩的LUT的大小取决于 --icc-3dlut-size=<value>

#target-prim=auto # 当不使用ICC颜色管理时，视频颜色将适应此颜色空间。未经校色的广色域屏可设定此参数以解决色彩过饱和的问题，例如99%的argb屏幕写adobe。90%+的p3色域屏写dci-p3（srgb屏无需更改此默认值）

##⇘⇘音视频同步模式。只需注释掉 --video-sync=<value> 即可恢复MPV的默认同步模式
video-sync=display-resample # [SVP补帧时推荐关闭] 类"ReClock"作用，更改为与视频帧与显示器刷新率同步，自动调节音频速度补偿偏移。默认值 audio （与音频/系统时钟同步）通常兼容性最好但有偶尔的丢帧和重复
video-sync-max-video-change=5 # [仅当 --video-sync=display-xxxx 时生效；SVP补帧时推荐关闭] 
interpolation # [仅当 --video-sync=display-xxxx 时生效；SVP补帧时推荐关闭] 减少由于视频fps和显示刷新率不匹配而引起的卡顿（也称为抖动）。
tscale=oversample # [仅开启 --interpolation 时生效；SVP补帧时推荐关闭] 时间插值算法（非MEMC运动补偿）。oversample是维持源观感的算法（效果类似MADVR的smoothmotion），默认值 mitchell
#profile=Tscale-box # [启用前需先注释 --tscale=<value>] 备选的时间插值算法，具体参数见最下方配置区的同名配置

##⇘⇘所谓的“画质”相关
##避免简单粗暴的使用 --profile=gpu-hq ，原因见下方以及手册[02]开头部分

#cscale=bilinear # 色度升频算法；可由更好的"KrigBilateral.glsl"取代。默认值为bilinear （旋转BUG https://github.com/mpv-player/mpv/issues/8223）
scale=ewa_lanczossharp # 放大算法， 默认值同上
dscale=mitchell # [使用"SSimDownscaler.glsl"时须锁mitchell] 缩小算法。若不设定，则自动采用 --scale=<value> 的值
##所有可用的内置算法参见手册[08]附录

#linear-upscaling # [须 --fbo-format 指定16位及以上的精度；与 --sigmoid-upscaling 不兼容] （对HDR内容无影响）
#sigmoid-upscaling # [使用"adaptive-sharpen.glsl"时须关闭；与 --linear-upscaling 不兼容] 放大时非线性的颜色转换，可避免强振铃伪影
##开发者建议要么优先使用 --sigmoid-upscaling ，要么以上两项干脆都不用
#linear-downscaling # [使用"SSimDownscaler.glsl"时须关闭；须 --fbo-format 指定16位及以上的精度] （对HDR内容无影响）
##上两项 --linear- 的参数对应MADVR中的"scale in linear light"，在缩小算法中线性处理可以提升颜色对比度的精确性
#correct-downscaling # [当 --dscale=bilinear 时此项无效] 增强缩小算法的质量，对于异形比例视频可能产生微小失真
#scaler-resizes-only=no # 默认yes，当未进行缩放处理时，使用bilinear算法完美还原；禁用时，即使未改变大小，也使用指定的scale值进行处理，可以修正nnedi3和ravu引入的半像素偏移（但没必要）

dither-depth=auto # <N|no|auto> 是否开启色深抖动弥补色彩转换损失。8位显示器写8，10位显示器写10，auto的值取决于 --gpu-api 不一定正确。如果8抖10的显示器使用10存在输出异常的情况，改回值8
#deband # [需要 --hwdec=no或xxxx-copy] 默认不启用去色带。可能受硬解码影响实际效果
#profile=DeBand+ # [启用前需先注释 --deband] 备选的去色带方案，具体参数见最下方配置区的同名配置



 ####################
 # 脚本 滤镜 着色器 #
 ####################
gpu-shader-cache-dir="~~/shaders_cache" # 在此目录中存储和加载已编译的GLSL着色器缓存，可以提高启动性能。
#input-ipc-server=mpvpipe # [使用SVP Manager时必须开启此项]
##以下都可选择在此处开启，即默认每次随播放器启动；或者使用"input.conf"中的方案手动选择加载

##⇘⇘脚本部分
#load-scripts=yes # 自动挂载\scripts\目录中的所有脚本，默认yes。设置为no时可用下一行示例的命令加载指定脚本
#scripts="~~/scripts/autoload.lua;~~/scripts/on_top_only_while_playing.lua;~~/scripts/playlistmanager.lua;~~/scripts/open-file-dialog.lua"
osc=no # [缩略图引擎的前置条件] 屏蔽原OSC界面（即内置的"osc.lua"脚本）


##⇘⇘滤镜部分
##设定随MPV启动的音/视频滤镜的书写格式（支持多项） --af/vf=滤镜①=参数❶=值:参数❷=值,滤镜②...
## --af 和 --vf 仅能各存在一条。如果不想使用单条参数，可以拆开写，例如使用 --vf-append 追加更多的滤镜，并不会覆盖 --vf=<value> 指定的滤镜

##音频变速滤镜三选一（当前默认值已足够好）
#af=scaletempo=scale=1.0:stride=60:overlap=.20:search=14:speed=tempo # 示例值为默认参数。其中的 scale=<N> 控制额外视频加速度；stride=<N> 值太高会导致在高速时跳音，低速出现回声，值太低会改变音调，值增大提升性能；overlap=<N> 重叠百分比，值减少提高分离度且提升性能；search=<N> 搜索最佳重叠位置的长度（毫秒），值减少提升性能；speed=<tempo|pitch|both|none> tempo节奏与速度同步，pitch造成卡顿不使用，both同时兼顾节奏与音调，none忽略速度变化不使用
#af=scaletempo2=min-speed=0.25:max-speed=4.0:search-interval=30:window-size=20 # 此项参数为变速播放时默认自动激活的音频滤镜。在 min/max-speed=<N> 此速度范围外直接静音处理。scaletempo2具有更高的音频质量
#af=rubberband # 声音质量介于scaletempo和scaletempo2之间。可调节的细参众多，详情见官方文档，这里直接使用默认参数

#vf-append=format=gamma=gamma2.2 # MPV校色曲线目标是BT.1886，此视频滤镜用于回归常见的显示器标准 https://github.com/mpv-player/mpv/issues/8009
#vf-append=fps=60/1.001 # 强制视频以指定帧率输出（此项与补帧冲突），通常被用于增强滚动弹幕的平滑性，不推荐使用 --sub-fps=<value> 。分子数值（取整）为你的显示器刷新率。
##VS脚本实际以视频滤镜的形式在MPV中工作。补帧滤镜只能启用一个，且不与SVP一起使用（建议编辑源文件参数以适配实际机器）
#vf-append=vapoursynth="~~/mvtools-standard.vpy" # mvtools补帧脚本标准版
#vf-append=vapoursynth="~~/svpflow-2x.vpy" # 通过svpflow实现的补帧脚本动漫版（非SVP Manager程序）


##⇘⇘着色器部分
##此处的 --glsl-shaders=<value> 用于指定每次随MPV共同启动的着色器（支持多项）。更多详细着色器信息参见手册[01]
##--glsl-shaders-append 等效 --glsl-shader=<value> （注意和上行说明中参数的区别），表示追加着色器（单次仅能追加一项），并不会覆盖第一条 --glsl-shaders=<value> 指定的着色器，可无限追加该命令。

#glsl-shaders="~~/shaders/Anime4K_Denoise_Bilateral_Mode.glsl;~~/shaders/Anime4K_Deblur_DoG.glsl;~~/shaders/Anime4K_DarkLines_HQ.glsl;~~/shaders/Anime4K_ThinLines_HQ.glsl;~~/shaders/Anime4K_Upscale_CNN_M_x2.glsl" #  初始共同加载多个着色器的示例写法
#glsl-shaders-append="~~/shaders/SSimDownscaler.glsl" # [与 --dscale=mitchell 和 --linear-downscaling=no 一起使用] 对MPV的内置缩小算法增强
#glsl-shaders-append="~~/shaders/adaptive-sharpen.glsl" # [与 --sigmoid-upscaling=no 一起使用] 自适应锐化



 ########
 # 字幕 #
 ########
sub-auto=fuzzy # 自动加载同名外挂字幕
sub-file-paths=sub;subtitles;字幕;C:/字幕库 # 指定额外的目录来搜索与视频匹配的字幕。支持相对和绝对路径，示例即自动搜索该视频路径下名为"sub","subtitles","字幕"和C盘的"字幕库"文件夹内
slang=chs,sc,zh,chi,zho # 字幕首选语言为中文，但MPV优先加载外挂轨道，此项参数可能实际用处不大

#blend-subtitles=video # <yes|video|默认no> 在插值和/或颜色管理之前，将字幕直接混合到升级的视频帧上（默认值：否）。如果选择了video，则行为类似于yes，但是以视频的原始分辨率绘制了子对象，并与视频一起缩放
##启用上项会导致字幕受 --icc-profile，--target-prim，--target-trc，--interpolation，--gamma-factor 和 --glsl-shaders=<value> 的影响，使用 --interpolation 时，可以提高字幕性能。启用此功能会将字幕限制在视频的可见部分（不能出现在视频下方的黑色空白处）。
sub-ass-force-margins=yes # [当 --blend-subtitles=yes/video 时无效] 使ass字幕尽可能输出在黑边上
#sub-use-margins=no # 是否使纯文本字幕输出在黑边上，默认yes

#sub-font='YouYuan' # 指定纯文本字幕的字体



 ########
 # 截图 #
 ########
##⇘⇘以下预设参数只是为了截取最高质量的图片（高质量截图处理效率较低），只有 Ctrl+s 才能截取实际渲染完成的画面
screenshot-format=png # <默认 jpg|png|webp>
#screenshot-jpeg-quality=100 # JPEG的最高质量，默认为90 <0-100>
#screenshot-jpeg-source-chroma=yes # 用与源视频相同的色度半采样写入JPEG，默认yes
#screenshot-png-compression=5 # PNG压缩等级，过高的等级影响性能，默认为7（0-9）
#screenshot-png-filter=5 # PNG的压缩过滤器。0为无，1为sub，2为up，3为average，4为Paeth，5为mixed。对于大多数图像，mixed可实现最佳压缩率，因此它是默认设置
#screenshot-webp-lossless=yes # 无损WEBP，默认no
#screenshot-webp-quality=100 # 此项数值仅在 --screenshot-webp-lossless=no 时生效
#screenshot-webp-compression=3 # WEBP压缩等级，使用有损WEBP时进一步降低图片质量，默认为4 <0-6>

screenshot-tag-colorspace=yes # 使用适当的色彩空间标记屏幕截图（并非所有格式受支持）默认no
#screenshot-high-bit-depth=yes # 主要影响PNG，尽可能使用和视频输出时相同的位深，默认yes
screenshot-template=MPV-%P-N%n # 截图命名模板（修改为增加时间码）
screenshot-directory=~~desktop/ # 保存截图在桌面



 ##################
 # 通用参数补充区 #
 ##################
#d3d11-output-csp=pq # [须 --gpu-api=d3d11] 此项参数用于直出HDR，且不支持条件配置会影响sdr播放。当前版本需先手动打开win10 OS HDR，再打开MPV后全屏开始播放



 ################
 # （条件）配置 #
 ################
##⇘⇘条件触发配置，根据给定条件激发特定参数，通用区已有的参数会被配置覆盖。简易格式见示例，如有其他补充的通用参数请不要写在下方！！！
##仅注释掉 --profile-cond 和 --profile-restore 即可将条件配置变为常规配置，常规配置的使用方法为通用区 --profile=<value>
##详细了解配置与通用参数的混合用法请读手册[02]

##⇘⇘条件配置的格式示例
#[FullScreen_Loop] # 配置名称，自定义
#profile-desc=全屏时循环播放当前文件 # 配置的描述，不属于参数，随意写
#profile-cond=fullscreen # 触发该配置的条件。可用的属性列表 https://mpv.io/manual/master/#property-list
#
#loop=inf # 中间部分写该条件下触发的参数
#
#profile-restore=copy # 此参数一般用于回归触发前的通用参数（关闭此项将保留该配置参数并覆盖通用参数）


[DeBand+]
profile-desc=自定义去色带
deband
deband-iterations=3 # <1-16> 去色带执行次数，越高强度但也越费时费力，数值>4实际无效（默认1）
deband-threshold=48 # <0-4096> 滤波器的截止阈值，更高的数字会增加强度，但会逐渐减少图像细节（默认32）
deband-range=12 # <1-64> 初始半径，越大的值去色带越强且性能占用越高；值越小越平滑（默认值16）。如果增大 --deband-iterations，需减小此值来进行补偿
deband-grain=24 # <0-4096> [如果使用以下两个静态降噪着色器，将此设置为0] 添加额外动态噪点，有助于掩盖剩余的量化伪影（默认48）
#glsl-shaders-append="~~/shaders/noise_static_chroma.hook"
#glsl-shaders-append="~~/shaders/noise_static_luma.hook"


[Tscale-box]
##这组时间插值方案参数来自开源社区，顺滑但不一定适合所有源 https://github.com/mpv-player/mpv/issues/2685
tscale=box
tscale-window=quadric # 或者 sphinx
tscale-radius=1.0 # 较高值更顺滑但也更糊，例 1.01
tscale-clamp=0.0


[HDR2SDR]
profile-desc=转化HDR在SDR设备上的模拟显示
profile-cond=p["video-params/primaries"]=="bt.2020"

blend-subtitles=no # 问题状态 https://github.com/mpv-player/mpv/issues/6368
#tone-mapping=bt.2390 # 色调映射算法，其他推荐能用的有mobius/reinhard/hable/gamma
#tone-mapping-param= # 色调映射算法的小参。bt.2390和hable无参。mobius默认0.3/reinhard默认0.5/gamma默认1.8
hdr-compute-peak=yes # 此选项基本上提供了动态的基于场景的色调映射
cscale=bilinear
scale=spline36
deband=no
vf="" # 此项用于清空vf列表恢复合理的HDR播放效果（如果启用 --vf=format:gamma=gamma2.2 的话会影响hdr的显示）
glsl-shaders="" # 看HDR不需要花里胡哨的东西（滑稽）

profile-restore=copy


#[DVD-Anime]
#profile-desc=2D低清源增强
#profile-cond=height<=576
#
#glsl-shaders="~~/shaders/Anime4K_Denoise_Bilateral_Median.glsl;~~/shaders/Anime4K_Deblur_DoG.glsl;~~/shaders/Anime4K_DarkLines_HQ.glsl;~~/shaders/Anime4K_ThinLines_HQ.glsl;~~/shaders/Anime4K_Upscale_CNN_L_x2.glsl;~~/shaders/Anime4K_RA_CNN_L.glsl"
#
#profile-restore=copy


